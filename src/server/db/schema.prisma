generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@localhost:5432/fullstack"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String    @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String   @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@unique([identifier, token])
  @@map("verification_requests")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?      @map("email_verified")
  image         String?
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
  subs          Subscription[]

  @@map("users")
}

model Sub {
  id        String         @id @default(cuid())
  name      String         @unique
  title     String?
  text      String?
  image     String?
  banner    String?
  createdAt DateTime       @default(now()) @map("created_at")
  posts     Post[]
  members   Subscription[]

  @@map("subs")
}

model Post {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  body      String
  postType  PostType @default(TEXT) @map("post_type")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  sub       Sub      @relation(fields: [subName], references: [name])
  subName   String   @map("sub_name")

  @@map("posts")
}

model Subscription {
  user    User   @relation(fields: [userId], references: [id])
  userId  String @map("user_id")
  sub     Sub    @relation(fields: [subName], references: [name])
  subName String @map("sub_name")

  @@id([userId, subName])
  @@map("subscriptions")
}

enum PostType {
  TEXT
  LINK
  IMAGE
}
